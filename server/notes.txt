!! To navigate through the server directory, 
write the command in the terminal --> npm init -y
this is going to initialisse an empty package json.
Now we will be able to install all the necessary dependencies.

!! npm install body-parser cors express mongoose nodemon
 *body-parser --> this is going to enable us to send post requests.
 *express --> framework for creating the routing of our application.
 *mongoose --> to create models for our posts.
 *nodemon --> so that we dont have to manually reset the server everytime we make a change.

!! Now after this import the dependencies in index.js
After successfully writing the import code in the index.js file,
we need to do one small thing in the package.json file
add one line below the main index.js --> "type": "module",

!! After this, delete the test script and add start script.
"start": "nodemon index.js"

!! For every express application, we need to initialise the app.
const app = express();

!! After the general setting of bodyParser, we need to connect our server application with a real database.
For that we are going to use mongodb.(cloud/atlas version){that means they are going to host our databse on their cloud}
After creating the cluster, we need to connect it with the application.
For that copy the command from the mongodb atlas and copy paste in vs code.
const CONNECTION_URL = "...";

!! After connecting to the databse, we need to port now,
const PORT = process.env.PORT || 5000;

!! Finally, we will use our mongoose to connect to the database.
mongoose.connect(CONNECTION_URL, {useNewUrlParser: true, useUnifiedTopology: true})
.then(() => app.listen(PORT, () => console.log('Server is running on port: ${PORT}')))  //what we want to do if our app is successful.
.catch((error) => console.log(error.message)); // if the connection is not successful.

!! Final piece of setup is 
mongoose.set('useFindAndModify', false);
